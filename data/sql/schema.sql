CREATE TABLE categorias (idcategoria INT, nombrecategoria VARCHAR(100), PRIMARY KEY(idcategoria)) ENGINE = INNODB;
CREATE TABLE detalleversion (iddetalleversion INT AUTO_INCREMENT, idversion INT, nropagina FLOAT(4, 2), accion VARCHAR(15), INDEX idversion_idx (idversion), PRIMARY KEY(iddetalleversion)) ENGINE = INNODB;
CREATE TABLE paginas (idpagina INT AUTO_INCREMENT, idsubcategoria INT, nropagina FLOAT(4, 2), imagenprincipal LONGBLOB, imagenmini LONGBLOB, tipopagina CHAR(3), INDEX idsubcategoria_idx (idsubcategoria), PRIMARY KEY(idpagina)) ENGINE = INNODB;
CREATE TABLE productopagina (pagina INT, sku VARCHAR(7), tamanofuente INT, coorx INT, coory INT, unidad VARCHAR(10), comprar INT, skupadre VARCHAR(7), padre INT, visible BIGINT DEFAULT 1 NOT NULL, PRIMARY KEY(pagina, sku, tamanofuente)) ENGINE = INNODB;
CREATE TABLE productopagina_dos (pagina INT, sku VARCHAR(7), tamanofuente INT, coorx INT, coory INT, unidad VARCHAR(10), comprar INT, skupadre VARCHAR(7), padre INT DEFAULT '1', PRIMARY KEY(pagina, sku, tamanofuente)) ENGINE = INNODB;
CREATE TABLE subcategoria (idsubcategoria INT, idcategoria INT, nombresubcategoria VARCHAR(150), paginicio INT, pagfin INT, INDEX idcategoria_idx (idcategoria), PRIMARY KEY(idsubcategoria)) ENGINE = INNODB;
CREATE TABLE tiendas (idtienda INT, idzona INT DEFAULT '0' NOT NULL, nombretienda VARCHAR(150) NOT NULL, latitud VARCHAR(20), longitud VARCHAR(20), INDEX idzona_idx (idzona), PRIMARY KEY(idtienda)) ENGINE = INNODB;
CREATE TABLE version (idversion INT AUTO_INCREMENT, descversion FLOAT(8, 2), PRIMARY KEY(idversion)) ENGINE = INNODB;
CREATE TABLE zonas (idzona INT, nombrezona VARCHAR(150) NOT NULL, PRIMARY KEY(idzona)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE detalleversion ADD CONSTRAINT detalleversion_idversion_version_idversion FOREIGN KEY (idversion) REFERENCES version(idversion);
ALTER TABLE paginas ADD CONSTRAINT paginas_idsubcategoria_subcategoria_idsubcategoria FOREIGN KEY (idsubcategoria) REFERENCES subcategoria(idsubcategoria);
ALTER TABLE subcategoria ADD CONSTRAINT subcategoria_idcategoria_categorias_idcategoria FOREIGN KEY (idcategoria) REFERENCES categorias(idcategoria);
ALTER TABLE tiendas ADD CONSTRAINT tiendas_idzona_zonas_idzona FOREIGN KEY (idzona) REFERENCES zonas(idzona);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
